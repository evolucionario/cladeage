######################################################################################
### FUNCTIONS FOR GENERATING EMPIRICAL PRIORS OF CLADE AGE USING THE FOSSIL RECORD ###
######################################################################################

### Author ###
# Santiago Claramunt
# E-mail: claramunt.bio@gmail.com

#Language: R (https://www.r-project.org)

### Details ###

# Given a set of fossil ages for a specific clade, these functions return a probability density for the age of the clade (Claramunt & Cracraft 2015). Specifically, if a set of fossil ages (x) is uniformly distributed, the probability density of the true age t is proportional to the joint probability of x given t, which is 1/t^n for x < t (Wang & Everson 2007, Wang 2010). This formula, used in function PD.age, requires a baseline, which could be the present (baseline=0) or another reference stratum. If a baseline is not provided, the function uses the youngest fossil age as the baseline and n-1 instead of n (Solow 2003). PD.age.unc uses pseudoreplicates to accommodate cases in which fossils ages are not know precisely but assigned to a chronostratigraphic interval; pseudoreplicates of fossil ages are generated by sampling uniformly from the time interval and then a final distribution is computed by averaging across pseudoreplicates. Function PD.age.plot produced a plot that in combination with line plots can be used to find an appropriate parametric probability density function to represent the empirical distribution to be incorporated as clade age priors in Bayesian analysis software (see Examples for details). A wrapper with an alternative parameterization of the log-normal probability density function is provided to facilitate curve fitting by eye.


### Usage ###

PD.age(x, baseline=NULL, p.max=0.99)
PD.age.unc(x, baseline=NULL, p.max=0.99, reps=1000, breaks=100)
PD.age.plot(x, baseline=NULL, p.max=0.99, reps=1000, breaks=100, line.col="red", ...)


### Arguments ###

# x			vector of fossil ages (PD.age) or a matrix (PD.age.unc) of fossil ages in which the first column is the maximum age (or lower stratigraphic bound) and the second column is the minimum fossil age (upper stratigraphic bound) for each fossil. 

# p.max		is the cumulative probability value to set a limit on the range of values for which the probability is calculated

# baseline 	baseline like the present (=0), or some other stratum of reference. If a baseline is not provided, the minimum value of x used as baseline n-1 is used instead of n (Solow 2003)

# reps		number of pseudoreplicates used to account for fossil age uncertainty.

# breaks	number of breaks or time intervals used to summarize the pseudoreplicates.

# line.col	color of the line plot (PD.age.plot)

# ...		further arguments passed to plot()


### FUNCTIONS ###

### Probability density of clade age with precise fossil ages###

PD.age <- function(x, baseline=NULL, p.max=0.99) {

	# If a baseline is not provided, use the minimum of x as the baseline and subtract one from n.
	
	if(is.null(baseline)) {
		baseline <- min(x)
		n <- length(x) -1
		}
		else n <- length(x)

	# Apply the baseline

	X <- x - baseline
	
	# Calculate the maximum value to be evaluated, set as the value at the p.max cumulative probability. See Solow (2003) equation 4. 
	
	MAX <- max(X)*(1-p.max)^-(1/n)
	
	# Generate a sequence of ages for which the probability will be calculated
	
	Y <- max(X):MAX
	
	# Calculate the likelihood of those ages Yi given the observed fossil ages, which is numerically equal to the joint probability of observing X given that the age of the clade is Y (Wang 2010):
		
	Lik <- 1/Y^n

	# Calculate the area under the curve. Because time intervals are 1 and it is a monotonically decreasing curve

	area <- sum(Lik) - Lik[1]/2

	# Rescale Likelihood so area = p.max

	P <- Lik*p.max/area
	
	pd <- as.data.frame(cbind(x=Y+baseline, P))

	return(pd)
}



### Probability density of clade age with fossil age uncertainty ###

PD.age.unc <- function(x, baseline=NULL, p.max=0.99, reps=1000, breaks=100) {

	N <- nrow(x)
	
	lower <- x[,1]
	upper <- x[,2]
	
	simages <- matrix(nrow=N, ncol=reps)
	for(i in 1:N) {
			simages[i,] <- runif(reps, min= upper[i], max= lower[i])
		}
	
	slist <- list()
	for(i in 1:reps) {slist[[i]] <- simages[,i]}
			
	UPDFs <- lapply(slist, PD.age, baseline=baseline, p.max=p.max)

	# Put all values in two vectors
	UPDFsx <- numeric()
	UPDFsPD <- numeric()
	for(i in 1:length(UPDFs)) {
		UPDFsx <- append(UPDFsx, UPDFs[[i]][,'x'])
		UPDFsPD <- append(UPDFsPD, UPDFs[[i]][,'P'])
		}
			
	Breaks <- seq(from=max(upper), to=max(UPDFsx), length.out=breaks)
	Density <- numeric()

	for(i in 2:length(Breaks)-1) {
			Density[i] <- sum(UPDFsPD[UPDFsx >= Breaks[i] & UPDFsx < Breaks[i+1]])
		}
		
	Density <- Density/reps
	Results <- as.data.frame(cbind(x= Breaks[-length(Breaks)], P=Density))
		
	return(Results)
}


### Clade Age Probability Density PLOT ###

PD.age.plot <- function(x, baseline=NULL, p.max=0.99, reps=1000, breaks=100, line.col="red", ...) {

	x <- as.matrix(x)
	
	par(las=1, lend=1, ljoin=1, yaxs='i')

	if(dim(x)[2]==1) {
		
		dens <- PD.age(x, baseline=baseline, p.max=p.max)
		
		plot(dens,type='n', ylim=c(0,max(dens$P)*1.1), ann=FALSE, axes=FALSE, ...); box()
		abline(v=max(x), lwd=2, col=gray(0.8))
		lines(dens, type='l', lwd=5, col=line.col)
		axis(1); mtext("time", 1, line=2.5); mtext("P", 2, las=1, line=2)
	}
		
	else if(dim(x)[2]==2) {
		
		dens <- PD.age.unc(x, baseline=baseline, p.max=p.max, reps=reps, breaks=breaks)
		
		plot(dens, type='n', ylim=c(0,max(dens$P)*1.1), axes=FALSE, ann=FALSE, ...); box()
		rect(xleft=max(x[,2]), ybottom=0, xright=max(x[,1]), ytop=1, col=gray(0.8), border=gray(0.8), lwd=2)
		lines(dens, type="s", lwd=5, col=line.col)
		axis(1); mtext("time", 1, line=2.5); mtext("P", 2, las=1, line=2)
	}
	else cat("Error: check the format of input data x")
}




### Examples ###

# No fossil age uncertainty #
PD.age(c(54,31, 25, 14, 5))
PD.age(c(54,31, 25, 14, 5), baseline=0)

# With fossil age uncertainty #

PD.age.unc(cbind(c(56, 35, 25, 14, 6), c(50, 30, 25, 14, 3.5)), baseline=0)


# Plot and fit of probability density function

PD.age.plot(c(54,31, 25, 14, 5), p.max=0.99)
curve(dexp(x-54, rate=0.062), col='black', lwd=3, add=TRUE)

PD.age.plot(cbind(c(56, 35, 25, 14, 6), c(50, 30, 25, 14, 3.5)))
curve(dlnorm(x-50, meanlog=2.7, sdlog=1)*1.3, col='black', lwd=3, add=TRUE)


# Since the mode of the empirical density is usually very close to the maximum possible age of the oldest fossil, an alternative parameterization of the log-normal probability density function can facilitate the visual fitting by using the interval range of the oldest fossil to set the mode parameter.

DLnorm <- function(x, sdlog, mode, multiplier=1) {
	R <- dlnorm(x, meanlog= sdlog^2+log(mode), sdlog=sdlog)*multiplier
	cat("meanlog =", sdlog^2+log(mode), "; sdlog =", sdlog=sdlog)
	return(R)
}

PD.age.plot(cbind(c(56, 35, 25, 14, 6), c(50, 30, 25, 14, 3.5)))
curve(DLnorm(x-50, sdlog=0.95, mode=56-50, multiplier=1.3), col='black', lwd=3, add=TRUE)



### References ###

# Claramunt, S., & J. Cracraft 2015. A new time-tree reveals Earth history's imprint on the evolution of modern birds. ScienceAdvances in press.
#Solow, A. R. 2003. Estimation of stratigraphic ranges when fossil finds are not randomly distributed. Paleobiology 29(2):181-185.
#Wang, S. C. 2010. Principles of statistical inference: likelihood and the Bayesian paradigm. Pp. 1-18 in J. Alroy & G. Hunt (eds.) Quantitative methods in paleobiology. The Paleontological Society Papers 16.
#Wang, S. C., & P. J. Everson. 2007. Confidence intervals for pulsed mass extinction events. Paleobiology 33(2):324â€“336.
